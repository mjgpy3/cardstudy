{"mappings":"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","sources":["js/decks.json","js/deckList.js","js/card.js","js/main.js"],"sourcesContent":["[{\"sideA\":\"Greek Word\",\"name\":\"Greek\",\"cards\":[{\"sideA\":\"γεια σας\",\"sideB\":\"Hello\"},{\"sideA\":\"αντιο σας\",\"sideB\":\"Goodbye\"},{\"sideA\":\"πατέρας\",\"sideB\":\"Father\"},{\"sideA\":\"μητέρα\",\"sideB\":\"Mother\"}],\"sideB\":\"English Translation\"},{\"sideA\":\"Quote\",\"name\":\"Quotes\",\"cards\":[{\"sideA\":\"Where is fancy bred? In the heart or in the road?\",\"sideB\":\"Willy Wonka\"},{\"sideA\":\"If the Good Lord had intended us to walk he wouldn't have inveted roller skates\",\"sideB\":\"Willy Wonka\"}],\"sideB\":\"Author\"},{\"sideA\":\"Russian Word\",\"name\":\"Russian\",\"cards\":[{\"sideA\":\"отец\",\"sideB\":\"Father\"},{\"sideA\":\"папа\",\"sideB\":\"Dad\"},{\"sideA\":\"мать\",\"sideB\":\"Mother\"},{\"sideA\":\"Мама\",\"sideB\":\"Mom\"}],\"sideB\":\"English Translation\"},{\"sideA\":\"Word\",\"name\":\"Vocabulary\",\"cards\":[{\"sideA\":\"Idyll\",\"sideB\":\"A short poem or prose piece depicting a rural or pastoral scene, usually in idealized terms\"},{\"sideA\":\"Amorous\",\"sideB\":\"Full of or strongly disposed to romantic love\"},{\"sideA\":\"Dowager\",\"sideB\":\"(1) A widow who holds a title or property derived from her deceased husband (2) an elderly woman of high social station\"},{\"sideA\":\"Phalanx\",\"sideB\":\"A compact or close-knit body of people\"},{\"sideA\":\"Apropos\",\"sideB\":\"Fitting and to the point\"},{\"sideA\":\"Charabanc\",\"sideB\":\"A bus typically used for sightseeing, originally open and pulled by horses\"},{\"sideA\":\"Dacha\",\"sideB\":\"A Russian country house or villa\"},{\"sideA\":\"Pallor\",\"sideB\":\"Unnatural lack of color in the skin\"},{\"sideA\":\"Monomania\",\"sideB\":\"Single-minded insanity or mania\"},{\"sideA\":\"Guffaw\",\"sideB\":\"Burst of deep, loud, hearty laughter\"},{\"sideA\":\"Samovar\",\"sideB\":\"Russian, metal urn used for tea-making\"},{\"sideA\":\"Diffident\",\"sideB\":\"Showing modest reserve\"},{\"sideA\":\"Corpulence\",\"sideB\":\"Excessive fatness shown\"},{\"sideA\":\"Mawkish\",\"sideB\":\"Insecurely emotional\"},{\"sideA\":\"Dissembler\",\"sideB\":\"One who conceals their true opinions under a false appearance\"},{\"sideA\":\"Castigate\",\"sideB\":\"Punish, correct\"},{\"sideA\":\"Punctilious\",\"sideB\":\"Attentive to etiquette and good social behavior\"},{\"sideA\":\"Pecuniary\",\"sideB\":\"Related to money\"},{\"sideA\":\"Reproof\",\"sideB\":\"Act of criticism\"},{\"sideA\":\"Fatuity\",\"sideB\":\"Ludicrous folly\"},{\"sideA\":\"Genial\",\"sideB\":\"Agreeable, comfortable\"},{\"sideA\":\"Peremptory\",\"sideB\":\"Final, decisive act\"},{\"sideA\":\"Paroxysm\",\"sideB\":\"Uncontrollable, sudden attack\"},{\"sideA\":\"Vivisect\",\"sideB\":\"Cut open a still-alive body\"},{\"sideA\":\"Incongruous\",\"sideB\":\"Inappropriate or incompatible\"},{\"sideA\":\"Pettifogging\",\"sideB\":\"Debating over petty issues\"},{\"sideA\":\"Milksop\",\"sideB\":\"Timid, unassertive or weak man or boy\"},{\"sideA\":\"Harangue\",\"sideB\":\"An exclamation, bombastic, emotional and with force\"},{\"sideA\":\"Impunity\",\"sideB\":\"Without punishment\"},{\"sideA\":\"Calumny\",\"sideB\":\"Personal attack on character\"},{\"sideA\":\"Expiate\",\"sideB\":\"Make amends for\"},{\"sideA\":\"Obsequious\",\"sideB\":\"Attempting to win favor by flattery\"},{\"sideA\":\"Declaim\",\"sideB\":\"Recite in public with rhetorical flare\"},{\"sideA\":\"Gourmand\",\"sideB\":\"Glutton\"},{\"sideA\":\"Fogey\",\"sideB\":\"One out-of-fashion\"},{\"sideA\":\"Nosegay\",\"sideB\":\"Arrangement of flowers\"},{\"sideA\":\"Lachrymary\",\"sideB\":\"Containing or intending to contain tears\"},{\"sideA\":\"Privation\",\"sideB\":\"Extreme poverty\"},{\"sideA\":\"Churl\",\"sideB\":\"Person lacking culture or refinement\"},{\"sideA\":\"Gait\",\"sideB\":\"Rate of moving\"},{\"sideA\":\"Conflagration\",\"sideB\":\"Uncontrollable, large fire\"},{\"sideA\":\"Hypostasis\",\"sideB\":\"The substance or essential nature of an individual\"},{\"sideA\":\"Novation\",\"sideB\":\"The substitution of a new legal obligation for an old one\"},{\"sideA\":\"Ineffable\",\"sideB\":\"Incapable of being expressed in words\"},{\"sideA\":\"Equivocal\",\"sideB\":\"Open to two or more interpretations and often intended to conceal the truth\"},{\"sideA\":\"Repudiate\",\"sideB\":\"To reject the validity and authority of\"},{\"sideA\":\"Pleroma\",\"sideB\":\"Fullness; abundance; plentitude\"},{\"sideA\":\"Eon\",\"sideB\":\"An indefinitely long period of time; an age\"},{\"sideA\":\"Exegesis\",\"sideB\":\"Critical examination or analysis, especially of a text\"},{\"sideA\":\"Evince\",\"sideB\":\"To show or demonstrate clearly; manifest\"},{\"sideA\":\"Incorporeal\",\"sideB\":\"Lacking material form or substance\"},{\"sideA\":\"Soteriology\",\"sideB\":\"The branch of theology dealing with the nature and means of salvation\"},{\"sideA\":\"Vis-a-vis\",\"sideB\":\"Face to face\"},{\"sideA\":\"Incipient\",\"sideB\":\"Beginning to exist or appear\"},{\"sideA\":\"Quiescent\",\"sideB\":\"Marked by inactivity or repose; tranquilly at rest\"},{\"sideA\":\"Congener\",\"sideB\":\"A member of the same taxonomic genus as another plant or animal\"},{\"sideA\":\"Vicissitude\",\"sideB\":\"The quality or state of being changeable; mutable\"},{\"sideA\":\"Progeny\",\"sideB\":\"Descendants, children\"},{\"sideA\":\"Indomitable\",\"sideB\":\"Incapable of being subdued\"},{\"sideA\":\"Primogenitor\",\"sideB\":\"Ancestor, forefather\"},{\"sideA\":\"Hobnob\",\"sideB\":\"To associate familiarly\"},{\"sideA\":\"Pemmican\",\"sideB\":\"A concentrated food used by North American Indians and consisting of lean meat dried, pounded fine, and mixed with melted fat\"},{\"sideA\":\"Paraffin\",\"sideB\":\"A waxy crystalline flammable substance obtained especially from distillates of wood, coal, petroleum, or shale oil that is a complex mixture of hydrocarbons and is used chiefly in coating and sealing, in candles, in rubber compounding, and in pharmaceuticals and cosmetics\"},{\"sideA\":\"Maelstrom\",\"sideB\":\"A powerful often violent whirlpool sucking in objects within a given radius\"},{\"sideA\":\"Lee\",\"sideB\":\"Protecting shelter\"},{\"sideA\":\"Guano\",\"sideB\":\"A fertilizer containing the accumulated excrement of seabirds or bats\"},{\"sideA\":\"Sextant\",\"sideB\":\"An instrument for measuring angular distances used especially in navigation to observe altitudes of celestial bodies (as in ascertaining latitude and longitude)\"},{\"sideA\":\"Forecastle\",\"sideB\":\"The forward part of the upper deck of a ship\"},{\"sideA\":\"Ballast\",\"sideB\":\"A heavy substance (such as rocks or water) placed in such a way as to improve stability and control (as of the draft of a ship or the buoyancy of a balloon or submarine)\"}],\"sideB\":\"Definition\"}]\n","import decks from './decks.json';\n\nconst renderDeckList = () => {\n  const deckList = document.getElementById('content');\n\n  const row = document.createElement('div');\n  row.className = 'row';\n\n  deckList.appendChild(row);\n\n  decks.forEach(deck => {\n    const col = document.createElement('div');\n    col.className = 'col s12 m3';\n\n    row.appendChild(col);\n\n    const card = document.createElement('div');\n    card.className = 'card';\n\n    col.appendChild(card);\n\n    const content = document.createElement('div');\n    content.className = 'card-content';\n\n    card.appendChild(content);\n\n    const action = document.createElement('div');\n    action.className = 'card-action';\n\n    card.appendChild(action);\n\n    const title = document.createElement('span');\n    title.className = 'card-title';\n\n    title.appendChild(\n      document.createTextNode(deck.name)\n    );\n\n    content.appendChild(title);\n\n    const body = document.createElement('p');\n\n    body.appendChild(\n      document.createTextNode(`Side A: ${deck.sideA}, Side B: ${deck.sideB}`)\n    );\n\n    content.appendChild(body);\n\n    const openLink = document.createElement('a');\n    openLink.href = `?deck=${deck.name}&side=a&card=0`;\n\n    action.appendChild(openLink);\n\n    openLink.appendChild(\n      document.createTextNode('Open Deck')\n    );\n\n    const openShuffledLink = document.createElement('a');\n    openShuffledLink.href = `?deck=${deck.name}&mode=shuffled`;\n\n    action.appendChild(openShuffledLink);\n\n    openShuffledLink.appendChild(\n      document.createTextNode('Open Shuffled Deck')\n    );\n  });\n};\n\nexport { renderDeckList };\n","import decks from './decks.json';\n\nconst renderShuffledCard  = ({ deck }) => {\n  const [{ cards }] = decks.filter(({ name }) => name === deck);\n\n  renderCard({\n    deck,\n    side: 'a',\n    card: Math.floor(Math.random() * cards.length),\n    mode: 'shuffled'\n  });\n}\n\nconst renderCard = ({ deck, side, card, mode }) => {\n  const [{ cards }] = decks.filter(({ name }) => name === deck);\n\n  const correctCard = cards[card];\n\n  const text = side === 'a' ? correctCard.sideA : correctCard.sideB;\n\n  const oppositeSide = side === 'a' ? 'b' : 'a';\n  const previousCard = card == 0 ? cards.length - 1 : card - 1;\n  const nextCard = card == cards.length - 1 ? 0 : card + 1;\n\n  const content = document.getElementById('content');\n\n  const row = document.createElement('div');\n  row.className = 'row';\n\n  content.appendChild(row);\n\n  const col = document.createElement('div');\n  col.className = 'col s12 m12';\n\n  row.appendChild(col);\n\n  const cardElem = document.createElement('div');\n  cardElem.className = 'card large';\n\n  col.appendChild(cardElem);\n\n  const cardContent = document.createElement('div');\n  cardContent.className = 'card-content';\n\n  cardElem.appendChild(cardContent);\n\n  const action = document.createElement('div');\n  action.className = 'card-action';\n\n  cardElem.appendChild(action);\n\n  const title = document.createElement('span');\n  title.className = 'card-title';\n\n  title.appendChild(\n    document.createTextNode(text)\n  );\n\n  cardContent.appendChild(title);\n\n  const flipLink = document.createElement('a');\n  flipLink.href =\n    mode === 'shuffled'\n      ? `?deck=${deck}&side=${oppositeSide}&card=${card}&mode=shuffled`\n      : `?deck=${deck}&side=${oppositeSide}&card=${card}`;\n\n  flipLink.appendChild(\n    document.createTextNode('Flip')\n  );\n\n  const previousLink = document.createElement('a');\n  previousLink.href = `?deck=${deck}&side=a&card=${previousCard}`;\n\n  if (mode !== 'shuffled') {\n    previousLink.appendChild(\n      document.createTextNode('Previous')\n    );\n  }\n\n  const nextLink = document.createElement('a');\n  nextLink.href =\n    mode === 'shuffled'\n      ? `?deck=${deck}&mode=shuffled`\n      : `?deck=${deck}&side=a&card=${nextCard}`;\n\n  nextLink.appendChild(\n    document.createTextNode('Next')\n  );\n\n  action.appendChild(previousLink);\n  action.appendChild(flipLink);\n  action.appendChild(nextLink);\n};\n\nexport { renderCard, renderShuffledCard };\n","import decks from './decks.json';\nimport { renderDeckList } from './deckList';\nimport { renderCard, renderShuffledCard } from './card';\n\nwindow.addEventListener('DOMContentLoaded', event => {\n  const pieces = window.location.href.split('?');\n  const queryParams = (pieces[1] || '')\n    .split('&')\n    .map(pair => pair.split('='))\n    .reduce((res, [key, value]) => {\n      res[key] = value;\n      return res;\n    }, {});\n\n  if ('deck' in queryParams && 'side' in queryParams && 'card' in queryParams) {\n    renderCard({\n      deck: queryParams['deck'],\n      side: queryParams['side'],\n      card: parseInt(queryParams['card']),\n      mode: queryParams['mode']\n    });\n  } else if ('mode' in queryParams && queryParams['mode'] === 'shuffled') {\n    renderShuffledCard({\n      deck: queryParams['deck']\n    });\n  } else {\n    renderDeckList();\n  }\n});\n"],"names":["$66fe64a85fe71b19$exports","JSON","parse","$b3b5eaa82d629820$export$e9aece8f6847aae6","deck","side","card","mode","cards","$parcel$interopDefault","filter","name","correctCard","text","sideA","sideB","oppositeSide","previousCard","length","nextCard","content","document","getElementById","row","createElement","className","appendChild","col","cardElem","cardContent","action","title","createTextNode","flipLink","href","previousLink","nextLink","window","addEventListener","event","queryParams","location","split","map","pair","reduce","res","key","value","parseInt","Math","floor","random","$b3b5eaa82d629820$export$1fcef7e0f5910297","deckList","forEach","body","openLink","openShuffledLink","$8f34eb889186d956$export$8ff118e53bb72e9d"],"version":3,"file":"index.2903e2e5.js.map"}